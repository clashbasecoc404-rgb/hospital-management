-- ===============================
-- DATABASE CREATION
-- ===============================
CREATE DATABASE IF NOT EXISTS HospitalManagement;
USE HospitalManagement;

-- ===============================
-- TABLES
-- ===============================

-- 1. Patient Table
CREATE TABLE IF NOT EXISTS Patient (
    PatientID INT PRIMARY KEY,
    Name VARCHAR(100),
    DOB DATE,
    BloodGroup VARCHAR(5),
    PhoneNumber VARCHAR(15),
    Address VARCHAR(200)
);

-- 2. Department Table
CREATE TABLE IF NOT EXISTS Department (
    DepartmentID INT PRIMARY KEY,
    Name VARCHAR(100),
    ContactInfo VARCHAR(50),
    ActiveStatus VARCHAR(10)
);

-- 3. Doctor Table
CREATE TABLE IF NOT EXISTS Doctor (
    DoctorID INT PRIMARY KEY,
    Name VARCHAR(100),
    Gender VARCHAR(10),
    Specialisation VARCHAR(100),
    Phone VARCHAR(15),
    DepartmentID INT,
    FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID)
);

-- 4. Appointment Table
CREATE TABLE IF NOT EXISTS Appointment (
    AppointmentID INT PRIMARY KEY,
    PatientID INT,
    AppointmentDate DATE,
    CancelledStatus VARCHAR(10),
    FOREIGN KEY (PatientID) REFERENCES Patient(PatientID)
);

-- 5. MedicalRecord Table (with DoctorID)
CREATE TABLE IF NOT EXISTS MedicalRecord (
    MedicalRecordID INT PRIMARY KEY,
    PatientID INT,
    AppointmentID INT,
    DoctorID INT,
    TestResults VARCHAR(200),
    Treatment VARCHAR(200),
    DiagnosedDisease VARCHAR(200),
    DoctorNotes VARCHAR(300),
    FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
    FOREIGN KEY (AppointmentID) REFERENCES Appointment(AppointmentID),
    FOREIGN KEY (DoctorID) REFERENCES Doctor(DoctorID)
);

-- 6. Bills Table
CREATE TABLE IF NOT EXISTS Bills (
    BillID INT PRIMARY KEY,
    PatientID INT,
    AppointmentID INT,
    AdmissionDate DATE,
    Payment DECIMAL(10,2),
    FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
    FOREIGN KEY (AppointmentID) REFERENCES Appointment(AppointmentID)
);

-- 7. Bills Audit Table
CREATE TABLE IF NOT EXISTS Bills_Audit (
    BillAuditID INT PRIMARY KEY AUTO_INCREMENT,
    BillID INT,
    OldPayment DECIMAL(10,2),
    NewPayment DECIMAL(10,2),
    ChangeDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    ChangedBy VARCHAR(100) DEFAULT USER()
);

-- ===============================
-- DATA INSERTION
-- ===============================

-- Patients
INSERT INTO Patient VALUES
(1, 'Ravi Kumar', '1990-05-14', 'A+', '9876543210', 'Delhi'),
(2, 'Anjali Sharma', '1985-11-22', 'B-', '9876543211', 'Mumbai'),
(3, 'Suresh Menon', '1978-07-09', 'O+', '9876543212', 'Chennai'),
(4, 'Priya Nair', '1992-03-16', 'AB+', '9876543213', 'Kochi'),
(5, 'Amit Patel', '2000-12-25', 'A-', '9876543214', 'Ahmedabad');

-- Departments
INSERT INTO Department VALUES
(1, 'Cardiology', 'cardio@hospital.com', 'Active'),
(2, 'Neurology', 'neuro@hospital.com', 'Active'),
(3, 'Orthopedics', 'ortho@hospital.com', 'Inactive'),
(4, 'Pediatrics', 'pediatrics@hospital.com', 'Active'),
(5, 'Dermatology', 'derma@hospital.com', 'Active');

-- Doctors
INSERT INTO Doctor VALUES
(1, 'Dr. Arjun Mehta', 'Male', 'Cardiologist', '9123456780', 1),
(2, 'Dr. Neha Kapoor', 'Female', 'Neurologist', '9123456781', 2),
(3, 'Dr. Rajeev Singh', 'Male', 'Orthopedic Surgeon', '9123456782', 3),
(4, 'Dr. Kavya Iyer', 'Female', 'Pediatrician', '9123456783', 4),
(5, 'Dr. Sameer Khan', 'Male', 'Dermatologist', '9123456784', 5);

-- Appointments
INSERT INTO Appointment VALUES
(1, 1, '2025-09-15', 'No'),
(2, 2, '2025-09-16', 'No'),
(3, 3, '2025-09-17', 'Yes'),
(4, 4, '2025-09-18', 'No'),
(5, 5, '2025-09-19', 'No');

-- Medical Records (with DoctorID)
INSERT INTO MedicalRecord VALUES
(1, 1, 1, 1, 'Normal ECG', 'Lifestyle change', 'Hypertension', 'Needs regular exercise'),
(2, 2, 2, 2, 'MRI shows lesion', 'Medication prescribed', 'Migraine', 'Monitor for 3 months'),
(3, 3, 3, 3, 'X-ray fracture', 'Plaster applied', 'Bone fracture', 'Rest for 6 weeks'),
(4, 4, 4, 4, 'Blood test normal', 'Vitamin supplements', 'Anemia', 'Follow up in 2 months'),
(5, 5, 5, 5, 'Skin allergy test positive', 'Ointment prescribed', 'Dermatitis', 'Avoid allergens');

-- Bills
INSERT INTO Bills VALUES
(1, 1, 1, '2025-09-15', 5000.00),
(2, 2, 2, '2025-09-16', 3000.00),
(3, 3, 3, '2025-09-17', 7000.00),
(4, 4, 4, '2025-09-18', 2500.00),
(5, 5, 5, '2025-09-19', 4500.00);

-- ===============================
-- VIEWS
-- ===============================

-- Drop old views if they exist
DROP VIEW IF EXISTS DoctorPatientCount;
DROP VIEW IF EXISTS AppointmentStatusView;

-- Doctor-wise Patient Count View (Fixed)
CREATE VIEW DoctorPatientCount AS
SELECT 
    D.DoctorID,
    D.Name AS DoctorName,
    COALESCE(COUNT(MR.PatientID), 0) AS TotalPatientsHandled
FROM Doctor D
LEFT JOIN MedicalRecord MR 
    ON D.DoctorID = MR.DoctorID
GROUP BY D.DoctorID, D.Name;

-- Appointment Status View
CREATE VIEW AppointmentStatusView AS
SELECT
    A.AppointmentID,
    P.Name AS PatientName,
    A.AppointmentDate,
    CASE
        WHEN A.CancelledStatus = 'Yes' THEN 'Unscheduled / Cancelled'
        WHEN A.AppointmentDate < CURDATE() AND A.CancelledStatus = 'No' THEN 'Completed'
        WHEN A.AppointmentDate >= CURDATE() AND A.CancelledStatus = 'No' THEN 'Scheduled'
        ELSE 'Unknown'
    END AS AppointmentStatus
FROM Appointment A
JOIN Patient P ON A.PatientID = P.PatientID;

-- ===============================
-- STORED PROCEDURES
-- ===============================
DELIMITER $$

CREATE PROCEDURE GetTotalRevenue(OUT TotalRevenue DECIMAL(10,2))
BEGIN
    SELECT SUM(Payment) INTO TotalRevenue FROM Bills;
    IF TotalRevenue IS NULL THEN
        SET TotalRevenue = 0.00;
    END IF;
END$$

DELIMITER ;

-- ===============================
-- TEST QUERIES
-- ===============================
SELECT * FROM DoctorPatientCount;
SELECT * FROM AppointmentStatusView;
CALL GetTotalRevenue(@total);
SELECT @total AS Total_Revenue;
